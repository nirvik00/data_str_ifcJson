<h1>IFC JSON DATA PROJECT</h1>


<div id="data-container">
    <div class="slidecontainer">
        <table id="queries">
            <tr>
                <td>
                    <p id="treeHt_p"> Height of tree levels (%): </p>
                </td>
                <td>
                    <input type="range" min="51" max="200" value="100" class="slider" id="treeHt" onchange="init()">
                </td>
            </tr>
            <tr>
                <td>
                    <p id="radius_p"> Radius of Nodes (%): </p>
                </td>
                <td>
                    <input type="range" min="1" max="200" value="10" class="slider" id="radius" onchange="init()">
                </td>
            </tr>
        </table>
        <table id="queries2">
            <tr>
                <td id="td2">
                    <select name="Data Set" id="selData" class="dropdown" onchange="updateDataFromFile()">
                        <option value=0>Complete JSON, (no 3d) </option>
                        <option value=1>IFC JSON wall/door</option>
                    </select>
                </td>
                <td id="td2">
                    <select name="Array Index" id="selArr" class="dropdown" onchange="init()"
                        onchange="updateDataFromFile()"></select>
                </td>
                <td id="td2">
                    <select name="Query Details" id="queryOption" class="dropdown" onchange="init()">
                        <option value=0>Display Tree</option>
                        <option value=1>Show Path</option>
                        <option value=2>Tabulate Node </option>
                    </select>
                </td>
            </tr>
            <tr>
                <td id="td2">
                    <input type="text" class="inputField" id="searchNode" name='searchNode'
                        placeholder="search by node name...">
                </td>
                <td id="td2">
                    <input type="button" class="button" value="Submit Query" id="submitQuery" onclick="init();">
                </td>
                <td id="td2">
                    <input type="button" class="button" value="draw3d" id="draw3d" onclick="submit3dQuery();">
                </td>
            </tr>
        </table>
    </div>
    <br>
</div>

<div id="result"></div>

<canvas id="nodeCanvas"></canvas>
<div id="div3d"></div>


<script>
    function init() {
        let div = document.getElementById("div3d");
        div.style.display = 'none';

        // updateDataFromFile(); // updates data, NodeArr variables

        // push data to canvas
        clearCanvas();
        NodeArr.forEach(node => {
            node.highlightNode = false;
        });

        var arrIndex = parseInt(document.getElementById("selArr").value);
        HT = Math.round(document.getElementById("treeHt").value);
        SC = Math.round(document.getElementById('treeHt').value / 100);
        Radius = (document.getElementById('radius').value / 100);


        document.getElementById("treeHt_p").innerHTML = "Height of tree levels (%): " + HT;

        document.getElementById("radius_p").innerHTML = "Radius of Nodes (%):  " + Radius*100;
        

        let numLevels = NodeArr[NodeArr.length - 1].level;

        CTX.canvas.width = window.innerWidth * 9 / 10;
        CTX.canvas.height = (HT * (numLevels-1 )) + 20;

        runQuery(); // file: queryFunc.js
    }

    function updateDataFromFile() {
        // update data from file
        dataFile = parseInt(document.getElementById('selData').value);
        if (dataFile === 0) {
            data = [...DATA];
        } else {
            data = [...JANDATA];
        }
        NodeArr = generateRelation(data); // file: relation.js
        updateArrayData();
    }

    // start select - dropdown //
    function updateArrayData() {
        var div2 = document.getElementById("selArr");
        while (div2.hasChildNodes()) {
            div2.removeChild(div2.firstChild);
        }
        var b0 = document.createElement('option');
        b0.text = "Select Array";
        b0.value = -1;
        div2.appendChild(b0);
        for (var i = 0; i < data.length; i++) {
            var b = document.createElement('option');
            b.text = "Array " + i;
            b.value = i;
            div2.appendChild(b);
        }
        init();
    }
    //  end select - dropdown //
</script>

<script>
    var scene3d, camera3d, lights3d, controls3d, renderer3d;
    var meshArr = [];

    function submit3dQuery() {
        init();
        dataFile = parseInt(document.getElementById('selData').value);
        if (dataFile === 0) {
            data = [...DATA];
        } else {
            data = [...JANDATA];
        }
        NodeArr = generateRelation(data); // file: relation.js
        CANVAS.style.display = 'none';
        let div = document.getElementById("div3d");
        div.style.display = 'block';
        while (div.hasChildNodes()) {
            div.removeChild(div.firstChild);
        }
        init3d();
    }
</script>

<script>
    /// global variables ///
    var data = [...DATA];
    var NodeArr = generateRelation(data); // file: relation.js

    ///
    var CANVAS = document.getElementById('nodeCanvas');
    var CTX = CANVAS.getContext('2d');

    updateArrayData(); // same file
    init(); // file: same file

    window.onresize = function () {
        init(); // file: same file
    };
</script>